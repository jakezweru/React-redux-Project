{"version":3,"sources":["constant.js","reducer.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","action.js","reportWebVitals.js","index.js"],"names":["CHANGE_SEARCH_FIELD","SEARCH_ROBOT_PENDING","SEARCH_ROBOT_SUCCESS","SEARCH_ROBOT_FAILED","initialState","searchField","initialStateRobot","isPending","robots","error","Card","id","name","email","className","alt","src","CardList","map","robot","index","SearchBox","onsearch","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","this","onSearchRobots","onSearchField","filterArray","filter","toLowerCase","includes","Component","connect","state","searchRobot","setRobot","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","Object","assign","logger","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84eacbdf.chunk.js","sourcesContent":["export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const SEARCH_ROBOT_PENDING = 'SEARCH_ROBOT_PENDING';\r\nexport const SEARCH_ROBOT_SUCCESS = 'SEARCH_ROBOT_SUCCESS';\r\nexport const SEARCH_ROBOT_FAILED = 'SEARCH_ROBOT_FAILED';\r\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tSEARCH_ROBOT_PENDING,\r\n\tSEARCH_ROBOT_SUCCESS,\r\n\tSEARCH_ROBOT_FAILED\r\n} from './constant.js';\r\n\r\nconst initialState = {\r\n\tsearchField: ''\r\n}\r\n\r\nexport const searchRobot = (state=initialState, action={}) => {\r\n\tswitch(action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\treturn Object.assign({}, state, {searchField: action.payload});\r\n\t\tdefault: \r\n\t\treturn state;\r\n\r\n\r\n\t}\r\n}\r\nconst initialStateRobot = {\r\n\tisPending: false,\r\n\trobots:[],\r\n\terror:''\r\n}\r\n\r\nexport const setRobot = (state = initialStateRobot, action = {}) => {\r\n\tswitch (action.type) {\r\n\t\tcase SEARCH_ROBOT_PENDING:\r\n\t\treturn Object.assign({},state, {isPending:true});\r\n\t\tcase SEARCH_ROBOT_SUCCESS:\r\n\t\treturn Object.assign({}, state, {robots: action.payload, isPending:false})\r\n\t\tcase SEARCH_ROBOT_FAILED:\r\n\t\treturn Object.assign({}, state, {error:action.payload, isPending:false})\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\r\n\r\n} ","import React from 'react';\r\n\r\nconst Card = ({id,name,email}) => {\r\n\treturn (\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<div>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n\t\t\t</div>\r\n\t\t\t<h2>{name}</h2>\r\n\t\t\t<p>{email}</p>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nconst CardList = ({robots}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n\t\t\trobots.map((robot, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tid={robots[index].id} \r\n\t\t\t\t\t\tname={robots[index].name} \r\n\t\t\t\t\t\temail={robots[index].email} \r\n\t\t\t\t\t/>\r\n\t\t\t\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({onsearch}) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t<input \r\n\t\tclassName='pa3 ba b-green bg--lightest-blue'\r\n\t\ttype='search' \r\n\t\tplaceholder='search a robot'\r\n\t\tonChange={onsearch}\r\n\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n//import Scroll.css;\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflow: 'Scroll' , border: '3px solid black', height: '800px'}}>\r\n\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Scroll;","import React, {Component} from 'react';\n\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport '../containers/App.css';\nimport Scroll from '../components/Scroll';\nimport {connect} from 'react-redux';\nimport {setSearchField, requestRobot} from '../action.js';\n\n\nconst mapStateToProps = state => {\n  return {\n    searchField:state.searchRobot.searchField,\n    robots:state.setRobot.robots,\n    isPending:state.setRobot.isPending\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onSearchField:(event)=> dispatch(setSearchField(event.target.value)),\n    onSearchRobots: () => dispatch(requestRobot())\n  }\n}\n\nclass App extends Component {\n  componentDidMount() {\n     this.props.onSearchRobots()\n  }\n\n  render() {\n\n    const {searchField, onSearchField, robots, isPending} = this.props;\n    const filterArray = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return isPending ?\n       <h1 className=\"tc f1\"> Loading </h1>  :\n     (\n        <div className=\"tc\"> \n        <h1 className='f1'> RobotFriends </h1>\n        <SearchBox onsearch={onSearchField}/>\n        <Scroll>\n        <CardList robots={filterArray}/>\n        </Scroll>\n        </div>\n      );\n    \n    \n  \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tSEARCH_ROBOT_PENDING,\r\n\tSEARCH_ROBOT_SUCCESS,\r\n\tSEARCH_ROBOT_FAILED\r\n} from './constant.js';\r\n\r\nexport const setSearchField = (text) => ({\r\n\ttype: CHANGE_SEARCH_FIELD,\r\n\tpayload:text\r\n})\r\n\r\nexport const requestRobot = () => (dispatch) => {\r\n\tdispatch({type: SEARCH_ROBOT_PENDING })\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(data => dispatch({type:SEARCH_ROBOT_SUCCESS, payload:data}))\r\n    .catch(error => dispatch({type:SEARCH_ROBOT_FAILED, payload:error}))\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {createLogger} from 'redux-logger'\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware, combineReducers} from 'redux';\nimport {searchRobot, setRobot} from './reducer';\nimport thunkMiddleware from 'redux-thunk';\nimport 'tachyons';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootReducer = combineReducers({searchRobot, setRobot});\nconst logger = createLogger();\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}